/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hfsguardadir.gui;

import hfsguardadir.catalogador.Catalogador;
import hfsguardadir.comum.Rotinas;
import hfsguardadir.objetos.Diretorio;
import hfsguardadir.objetos.Importar;
import hfsguardadir.objetosbo.DiretorioBO;
import hfsguardadir.objetosbo.ImportarBO;
import hfsguardadir.objetosgui.CaixaLista;
import hfsguardadir.objetosgui.Dialogo;
import java.awt.Cursor;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

public class FrmImportarDiretorio extends javax.swing.JDialog {
    private static final long serialVersionUID = 1L;
    
	private final FrmImportarDiretorioProgresso frmImportarDiretorioProgresso;    
    private final FrmPrincipal frmPrincipal;
    private final Catalogador catalogador;

    public CaixaLista memoImportaDir;
    
    public boolean bSubDiretorio;
    public ArrayList<Importar> listaImportar;
    public ArrayList<Diretorio> listaDiretorio;
    
    /**
     * Creates new form FrmImportarDiretorio
     */
    public FrmImportarDiretorio(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        mudarLingua();
        
        frmImportarDiretorioProgresso = new FrmImportarDiretorioProgresso(this);
        listaImportar = new ArrayList<>();
        memoImportaDir = new CaixaLista();
        scrollImportaDir.setViewportView(memoImportaDir);
        
        frmPrincipal = (FrmPrincipal) parent;
        catalogador = frmPrincipal.getCatalogador();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollImportaDir = new javax.swing.JScrollPane();
        panelSul = new javax.swing.JPanel();
        pbImportar = new javax.swing.JProgressBar();
        barraStatus = new javax.swing.JPanel();
        barraStatus1 = new javax.swing.JLabel();
        barraStatus2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("recursos/hfsguardadiretorio_pt"); // NOI18N
        setTitle(bundle.getString("FrmImportarDiretorio.titulo")); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().add(scrollImportaDir, java.awt.BorderLayout.CENTER);

        panelSul.setLayout(new java.awt.BorderLayout());

        pbImportar.setMinimumSize(new java.awt.Dimension(10, 17));
        pbImportar.setPreferredSize(new java.awt.Dimension(146, 17));
        panelSul.add(pbImportar, java.awt.BorderLayout.PAGE_START);

        barraStatus.setPreferredSize(new java.awt.Dimension(630, 20));
        barraStatus.setLayout(new java.awt.BorderLayout());

        barraStatus1.setText(bundle.getString("FrmImportarDiretorio.barraStatus1")); // NOI18N
        barraStatus1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        barraStatus1.setMaximumSize(new java.awt.Dimension(200, 18));
        barraStatus1.setMinimumSize(new java.awt.Dimension(200, 18));
        barraStatus1.setPreferredSize(new java.awt.Dimension(200, 18));
        barraStatus.add(barraStatus1, java.awt.BorderLayout.WEST);

        barraStatus2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        barraStatus.add(barraStatus2, java.awt.BorderLayout.CENTER);

        panelSul.add(barraStatus, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(panelSul, java.awt.BorderLayout.SOUTH);

        setSize(new java.awt.Dimension(911, 610));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        String sLog;
        //StringList log = new StringList();

        for (Importar importar : this.listaImportar) {
            catalogador.diretorioOrdem.setOrdem(1);

            if (!bSubDiretorio) {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

                try {
                    ImportarBO.getInstancia().ImportacaoCompleta(importar,
                            catalogador.diretorioOrdem, catalogador.listaExtensoes,
                            frmImportarDiretorioProgresso);
                } catch (SQLException ex) {
                    Logger.getLogger(FrmImportarDiretorio.class.getName()).
                            log(Level.SEVERE, null, ex);
                }

                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            } else {
                if (!DiretorioBO.getInstancia().verificaCodDir(importar.getAba(),
                        importar.getRotuloRaiz(), catalogador.listaDiretorioPai)) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

                    try {
                        ImportarBO.getInstancia().ImportacaoCompleta(importar,
                                catalogador.diretorioOrdem, catalogador.listaExtensoes,
                                frmImportarDiretorioProgresso);
                    } catch (SQLException ex) {
                        Logger.getLogger(FrmImportarDiretorio.class.getName()).
                                log(Level.SEVERE, null, ex);
                    }

                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                } else {
                    Dialogo.mensagemInfo(this,
                            "FrmImportarDiretorio.DiretorioExisteCatalogo");
                }
            }
        }

        if (frmPrincipal.menuGravarLogImportacao.isSelected()) {
            if (!memoImportaDir.getModelo().isEmpty()) {
                sLog = Rotinas.getParams().getDiretorioSistema() + Rotinas.BARRA_INVERTIDA 
                    + Rotinas.formataDate(Rotinas.FORMATO_DHARQUIVO, new Date()) 
                    + "_Importacao.log";
                try {
                    memoImportaDir.SaveToFile(sLog);
                } catch (IOException ex) {
                    Logger.getLogger(FrmImportarDiretorio.class.getName()).log(
                            Level.SEVERE, null, ex);
                }
            }
        } 
        
        this.dispose();
    }//GEN-LAST:event_formWindowOpened

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel barraStatus;
    private javax.swing.JLabel barraStatus1;
    public javax.swing.JLabel barraStatus2;
    private javax.swing.JPanel panelSul;
    public javax.swing.JProgressBar pbImportar;
    private javax.swing.JScrollPane scrollImportaDir;
    // End of variables declaration//GEN-END:variables

    private void mudarLingua() {
	setTitle(Rotinas.getRecurso("FrmImportarDiretorio.titulo"));
	barraStatus1.setText(Rotinas.getRecurso("FrmImportarDiretorio.barraStatus1"));
    }
}
